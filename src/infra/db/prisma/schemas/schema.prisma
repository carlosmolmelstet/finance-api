generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            String?
  avatar          String?
  createdAt       DateTime          @default(now())
  ExpenseCategory ExpenseCategory[]
  Expense         Expense[]
  RevenueCategory RevenueCategory[]
  Revenue         Revenue[]

  @@map("users")
}

model ExpenseCategory {
  id        String    @id @default(uuid())
  name      String
  color     String
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime  @default(now())
  Expense   Expense[]

  @@map("expense_categories")
}

model Expense {
  id              String          @id @default(uuid())
  amount          Float
  date            DateTime
  User            User            @relation(fields: [userId], references: [id])
  userId          String
  ExpenseCategory ExpenseCategory @relation(fields: [categoryId], references: [id])
  categoryId      String
  createdAt       DateTime        @default(now())
  updateAt        DateTime        @updatedAt()

  @@map("expenses")
}

model RevenueCategory {
  id        String    @id @default(uuid())
  name      String
  color     String
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime  @default(now())
  Revenue   Revenue[]

  @@map("revenue_categories")
}

model Revenue {
  id              String          @id @default(uuid())
  amount          Float
  date            DateTime
  User            User            @relation(fields: [userId], references: [id])
  userId          String
  RevenueCategory RevenueCategory @relation(fields: [categoryId], references: [id])
  categoryId      String
  createdAt       DateTime        @default(now())
  updateAt        DateTime        @updatedAt()

  @@map("revenues")
}
